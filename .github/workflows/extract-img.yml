#==========================================================================
# Copyright (C) 2024 Chewy Mage 
# https://github.com/Haris131/extract-img
#==========================================================================

name: Extract img file

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      type_file:
        description: "Select type file"
        required: false
        default: "img.xz"
        type: choice
        options:
          - img.xz
          - img.gz
      img_url:
        description: "Set the url img file"
        required: true
        default: ""
      rename:
        description: "Set the boot & rootfs name"
        required: true
        default: ""

env:
  TZ: Asia/Jakarta

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -y install wget python3
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo pip3 install gdown
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        cargo install mediafire_rs
        megacmd_ver=$(sudo cat /etc/*ease | grep "DISTRIB_RELEASE" | awk -F "=" '{print $2}')
        wget https://mega.nz/linux/repo/xUbuntu_${megacmd_ver}/amd64/megacmd-xUbuntu_${megacmd_ver}_amd64.deb && sudo apt install "$PWD/megacmd-xUbuntu_${megacmd_ver}_amd64.deb"
        sudo timedatectl set-timezone "$TZ"

    - name: Download file ${{ inputs.type_file }}
      run: |
        df -hT $PWD
        if [ $(echo ${{ inputs.img_url }} | grep "drive.") ]; then
          if [ $(echo ${{ inputs.img_url }} | awk -F "/" '{print $6}') ]; then
            link_gdrive=$(echo ${{ inputs.img_url }} | awk -F "/" '{print $6}')
          else
            link_gdrive=$(echo ${{ inputs.img_url }} | awk -F "/" '{print $4}' | awk -F "?id=" '{print $2}'|awk -F "&export" '{print $1}')
          fi
          gdown ${link_gdrive} -O file.${{ inputs.type_file }}
        else
          if [ $(echo ${{ inputs.img_url }} | grep "mediafire.com") ]; then
            mdrs ${{ inputs.img_url }}
            ls -l 
            mv *.${{ inputs.type_file }} file.${{ inputs.type_file }}
          else
            if [ $(echo ${{ inputs.img_url }} | grep "mega.nz") ]; then
              file_mega=$(mega-get ${{ inputs.img_url }} | awk -F: '{print $2}')
              mv ${file_mega} file.${{ inputs.type_file }}
            else
              wget --no-check-certificate ${{ inputs.img_url }} -O file.${{ inputs.type_file }}
            fi
          fi
        fi

    - name: Extract firmware
      id: extract
      run: |
        mkdir -p boot rootfs img
        if [ ${{ inputs.type_file }} = "img.gz" ]; then
          gunzip file.img.gz
        elif [ ${{ inputs.type_file }} = "img.xz" ]; then
          unxz file.img.xz
        fi
        los=$(sudo losetup -fP --show file.img)
        sudo mount ${los}p1 boot
        sudo mount ${los}p2 rootfs
        (cd boot && sudo tar cfz ../img/${{ inputs.rename }}-boot.tar.gz *)
        (cd rootfs && sudo tar cfz ../img/${{ inputs.rename }}-rootfs.tar.gz *)
        echo "PACKAGED_OUTPUTTAGS=${{ inputs.rename }}" >> ${GITHUB_ENV}
        echo "PACKAGED_OUTPUTPATH=./img/*" >> ${GITHUB_ENV}
        echo "PACKAGED_OUTPUTDATE=$(date +"%m.%d.%H%M")" >> ${GITHUB_ENV}
        echo "PACKAGED_STATUS=success" >> ${GITHUB_ENV}

    - name: Upload ${{ inputs.rename }}-boot.tar.gz
      uses: actions/upload-artifact@main
      if: env.PACKAGED_STATUS == 'success'
      with:
        name: ${{ inputs.rename }}-boot.tar.gz
        path: ./img/${{ inputs.rename }}-boot.tar.gz

    - name: Upload ${{ inputs.rename }}-rootfs.tar.gz
      uses: actions/upload-artifact@main
      if: env.PACKAGED_STATUS == 'success'
      with:
        name: ${{ inputs.rename }}-rootfs.tar.gz
        path: ./img/${{ inputs.rename }}-rootfs.tar.gz

    - name: Upload release asset
      uses: svenstaro/upload-release-action@v2
      if: env.PACKAGED_STATUS == 'success'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.PACKAGED_OUTPUTPATH }}
        tag: ${{ env.PACKAGED_OUTPUTDATE }}
        file_glob: true
        overwrite: true
        body: boot & rootfs
